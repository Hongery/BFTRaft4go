// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/client.proto

/*
Package client is a generated protocol buffer package.

It is generated from these files:
	proto/client.proto

It has these top-level messages:
	CommandResult
	Nothing
*/
package client

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CommandResult struct {
	Group     uint64 `protobuf:"varint,1,opt,name=group" json:"group,omitempty"`
	PeerId    uint64 `protobuf:"varint,2,opt,name=peer_id,json=peerId" json:"peer_id,omitempty"`
	NodeId    uint64 `protobuf:"varint,3,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	RequestId uint64 `protobuf:"varint,4,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Signature []byte `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	Result    []byte `protobuf:"bytes,6,opt,name=result,proto3" json:"result,omitempty"`
}

func (m *CommandResult) Reset()                    { *m = CommandResult{} }
func (m *CommandResult) String() string            { return proto.CompactTextString(m) }
func (*CommandResult) ProtoMessage()               {}
func (*CommandResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CommandResult) GetGroup() uint64 {
	if m != nil {
		return m.Group
	}
	return 0
}

func (m *CommandResult) GetPeerId() uint64 {
	if m != nil {
		return m.PeerId
	}
	return 0
}

func (m *CommandResult) GetNodeId() uint64 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *CommandResult) GetRequestId() uint64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *CommandResult) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *CommandResult) GetResult() []byte {
	if m != nil {
		return m.Result
	}
	return nil
}

type Nothing struct {
}

func (m *Nothing) Reset()                    { *m = Nothing{} }
func (m *Nothing) String() string            { return proto.CompactTextString(m) }
func (*Nothing) ProtoMessage()               {}
func (*Nothing) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*CommandResult)(nil), "client.CommandResult")
	proto.RegisterType((*Nothing)(nil), "client.Nothing")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BFTRaftClient service

type BFTRaftClientClient interface {
	ResponseCommand(ctx context.Context, in *CommandResult, opts ...grpc.CallOption) (*Nothing, error)
}

type bFTRaftClientClient struct {
	cc *grpc.ClientConn
}

func NewBFTRaftClientClient(cc *grpc.ClientConn) BFTRaftClientClient {
	return &bFTRaftClientClient{cc}
}

func (c *bFTRaftClientClient) ResponseCommand(ctx context.Context, in *CommandResult, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := grpc.Invoke(ctx, "/client.BFTRaftClient/ResponseCommand", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BFTRaftClient service

type BFTRaftClientServer interface {
	ResponseCommand(context.Context, *CommandResult) (*Nothing, error)
}

func RegisterBFTRaftClientServer(s *grpc.Server, srv BFTRaftClientServer) {
	s.RegisterService(&_BFTRaftClient_serviceDesc, srv)
}

func _BFTRaftClient_ResponseCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandResult)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BFTRaftClientServer).ResponseCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/client.BFTRaftClient/ResponseCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BFTRaftClientServer).ResponseCommand(ctx, req.(*CommandResult))
	}
	return interceptor(ctx, in, info, handler)
}

var _BFTRaftClient_serviceDesc = grpc.ServiceDesc{
	ServiceName: "client.BFTRaftClient",
	HandlerType: (*BFTRaftClientServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ResponseCommand",
			Handler:    _BFTRaftClient_ResponseCommand_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/client.proto",
}

func init() { proto.RegisterFile("proto/client.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xcd, 0x4a, 0x03, 0x31,
	0x14, 0x46, 0x8d, 0xb6, 0x29, 0x73, 0xb1, 0x14, 0x2e, 0xfe, 0x04, 0x51, 0x28, 0xb3, 0xea, 0xaa,
	0x82, 0x2e, 0xdd, 0x59, 0x10, 0x06, 0xc4, 0x45, 0x70, 0x2f, 0xa3, 0xb9, 0x8e, 0x81, 0x4e, 0x12,
	0xf3, 0xf3, 0x56, 0x3e, 0xa4, 0x24, 0x13, 0x91, 0x2e, 0xcf, 0x77, 0x20, 0xe4, 0x5c, 0x40, 0xe7,
	0x6d, 0xb4, 0xb7, 0x1f, 0x7b, 0x4d, 0x26, 0x6e, 0x0b, 0x20, 0x9f, 0xa8, 0xfd, 0x61, 0xb0, 0xdc,
	0xd9, 0x71, 0xec, 0x8d, 0x92, 0x14, 0xd2, 0x3e, 0xe2, 0x19, 0xcc, 0x07, 0x6f, 0x93, 0x13, 0x6c,
	0xcd, 0x36, 0x33, 0x39, 0x01, 0x5e, 0xc2, 0xc2, 0x11, 0xf9, 0x37, 0xad, 0xc4, 0x71, 0xd9, 0x79,
	0xc6, 0x4e, 0x65, 0x61, 0xac, 0xa2, 0x2c, 0x4e, 0x26, 0x91, 0xb1, 0x53, 0x78, 0x03, 0xe0, 0xe9,
	0x3b, 0x51, 0x88, 0xd9, 0xcd, 0x8a, 0x6b, 0xea, 0xd2, 0x29, 0xbc, 0x86, 0x26, 0xe8, 0xc1, 0xf4,
	0x31, 0x79, 0x12, 0xf3, 0x35, 0xdb, 0x9c, 0xca, 0xff, 0x01, 0x2f, 0x80, 0xfb, 0xf2, 0x1d, 0xc1,
	0x8b, 0xaa, 0xd4, 0x36, 0xb0, 0x78, 0xb1, 0xf1, 0x4b, 0x9b, 0xe1, 0xee, 0x19, 0x96, 0x8f, 0x4f,
	0xaf, 0xb2, 0xff, 0x8c, 0xbb, 0x92, 0x82, 0x0f, 0xb0, 0x92, 0x14, 0x9c, 0x35, 0x81, 0x6a, 0x11,
	0x9e, 0x6f, 0x6b, 0xf4, 0x41, 0xe2, 0xd5, 0xea, 0x6f, 0xae, 0x6f, 0xb5, 0x47, 0xef, 0xbc, 0x9c,
	0xe5, 0xfe, 0x37, 0x00, 0x00, 0xff, 0xff, 0xf2, 0xdf, 0x02, 0xb3, 0x2c, 0x01, 0x00, 0x00,
}
