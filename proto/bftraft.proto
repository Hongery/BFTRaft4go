// This file deinfes a fundamental protocal for BFT raft impelmentation
// For details of this protocal please refer:
// http://www.scs.stanford.edu/14au-cs244b/labs/projects/copeland_zhong.pdf

syntax = "proto3";
package bftraft;

service BFTRaft {
    rpc ExecCommand (CommandRequest) returns (CommandResponse) {}
    rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse) {}
    rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse) {}
}

message CommandRequest {
    uint64 group = 1;
    uint64 client_id = 2;
    uint64 request_id = 3;
    bytes signature = 4;
    bytes data = 5;
}

message CommandResponse {
    uint64 group = 1;
    uint32 leader_id = 2;
    uint32 node_id = 3;
    uint64 request_id = 4;
    bytes signature = 5;
    bytes result = 6;
}

message LogEntry {
    uint64 term = 1;
    bytes hash = 2;
    CommandRequest command = 3;
}

message RequestVoteRequest {
    uint64 group = 1;
    uint64 term = 2;
    uint64 log_index = 3;
    uint64 log_term  = 4;
    uint32 candidate_id = 5;
    bytes signature = 6;
}

message RequestVoteResponse {
    uint64 group = 1;
    uint64 term = 2;
    uint32 node_id = 3;
    uint32 candidate_id = 4;
    bool granted = 5;
    bytes signature = 6;
}

message AppendEntriesRequest {
    uint64 group = 1;
    uint64 term = 2;
    uint64 leader_id = 3;
    uint64 prev_log_index = 4;
    uint64 prev_log_term = 5;
    bytes signature = 6;
    repeated RequestVoteResponse quorum_votes = 7;
    repeated LogEntry entries = 8;
}

message AppendEntriesResponse {
    uint64 group = 1;
    uint64 term = 2;
    uint64 index = 3;
    uint32 node_id = 4;
    bool successed = 5;
    bool convinced = 6;
    bytes hash = 7;
    bytes signature = 8;
}

message Peer {
    uint64 id = 1;
}